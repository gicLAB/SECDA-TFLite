{
  "replace": {
    "set orig_proj_dir": "set orig_proj_dir \"[file normalize \"$origin_dir/\"]\"\nputs \"orig_proj_dir: $orig_proj_dir\"",
    "set_property \"ip_repo_paths\"": "set_property \"ip_repo_paths\" \"[file normalize \"$ip_dir\"]\" $obj",
    "proc cr_bd_design_1 { parentCell } {": "proc cr_bd_design_1 { parentCell prjName } {",
    "CONFIG.PCW_ACT_FPGA0_PERIPHERAL_FREQMHZ": "    CONFIG.PSU__CRL_APB__PL0_REF_CTRL__FREQMHZ {&{fpga_hz}} \\",
    "PSU__CRL_APB__PL0_REF_CTRL__ACT_FREQMHZ": "    CONFIG.PSU__CRL_APB__PL0_REF_CTRL__ACT_FREQMHZ {&{fpga_hz}} \\",
    "CONFIG.PCW_CLK0_FREQ": "   CONFIG.PCW_CLK0_FREQ {&{fpga_hz}000000} \\",
    "PCW_FPGA0_PERIPHERAL_FREQMHZ": "   CONFIG.PCW_FPGA0_PERIPHERAL_FREQMHZ {&{fpga_hz}} \\",
    "PSU__CRL_APB__PL0_REF_CTRL__FREQMHZ": "   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__FREQMHZ {&{fpga_hz}} \\",
    "cr_bd_design_1 \"\"": "cr_bd_design_1 \"\" $_xil_proj_name_\nlaunch_runs synth_1 -jobs 24\nwait_on_run synth_1\nlaunch_runs impl_1 -to_step write_bitstream -jobs 24\nwait_on_run impl_1\nopen_run impl_1\nreport_utilization -file $orig_proj_dir/$_xil_proj_name_/utilization_report_impl_full.txt\nreport_utilization -cells design_1_i/&{top} -file $orig_proj_dir/$_xil_proj_name_/utilization_report_impl_ip.txt\nreport_timing_summary -file $orig_proj_dir/$_xil_proj_name_/timing_report_impl_full.txt\nreport_timing_summary -cells design_1_i/&{top} -file $orig_proj_dir/$_xil_proj_name_/timing_report_impl_ip.txt\nexit",
    "      \"--help\"         { print_help }": "      \"--ip_repo\"      { incr i; set ip_dir [lindex $::argv $i] }\n      \"--help\"         { print_help }",
    "  puts \"\\[--help\\]               Print help information for this script\"": "  puts \"\\[--ip_repo <name>\\] Create project with the specified ip_repo. Default\"\n  puts \"                       name is the name of the project from where this\"\n  puts \"                       script was generated.\\n\"\n  puts \"\\[--help\\]               Print help information for this script\"  ",
    "save_bd_design": "  save_bd_design\n  regenerate_bd_layout\n  make_wrapper -files [get_files ${design_name}.bd] -top\n  set current_dir \"[file normalize \"./\"]\"\nadd_files $current_dir/$prjName/${prjName}.srcs/sources_1/bd/$design_name/hdl/${design_name}_wrapper.v",
    "CONFIG.c_m_axi_mm2s_data_width" : "   CONFIG.c_m_axi_mm2s_data_width {&{axi_bitW}} \\",
    "CONFIG.c_m_axi_s2mm_data_width" : "   CONFIG.c_m_axi_s2mm_data_width {&{axi_bitW}} \\",
    "CONFIG.c_m_axis_mm2s_tdata_width" : "   CONFIG.c_m_axis_mm2s_tdata_width {&{axi_bitW}} \\",
    "CONFIG.c_mm2s_burst_size" : "   CONFIG.c_mm2s_burst_size {&{axi_burstS}} \\",
    "CONFIG.c_s2mm_burst_size" : "   CONFIG.c_s2mm_burst_size {&{axi_burstS}} \\",
    "CONFIG.c_s_axis_s2mm_tdata_width" : "   CONFIG.c_s_axis_s2mm_tdata_width {&{axi_bitW}} \\"
  },
  "delete": {
    "update_ip_catalog -rebuild": "# Proc to create BD design_1"
  }
}